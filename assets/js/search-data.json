{
  
    
        "post0": {
            "title": "Programatically download OpenAQ data",
            "content": "# !pip install boto3 botocore import pandas as pd import numpy as np import matplotlib.pyplot as plt import sys import boto3 import botocore import os from IPython.display import clear_output . Setup . s3 = boto3.client(&#39;s3&#39;, config=botocore.config.Config(signature_version=botocore.UNSIGNED)) bucket_name = &#39;openaq-fetches&#39; prefix = &#39;realtime-gzipped/&#39; path = &#39;/content/drive/MyDrive/IJCAI-21/data/OpenAQ-Delhi/&#39; start_date = &#39;2020/01/01&#39; # start date (inclusive) end_date = &#39;2020/12/31&#39; # end date (inclusive) . Download . for date in pd.date_range(start=start_date, end=end_date): clear_output(wait=True) date = str(date).split(&#39; &#39;)[0] # keeping just YYYY-MM-DD from YYYY-MM-DD HH:MM:SS print(&#39;Downloading:&#39;, date) data_dict = s3.list_objects(Bucket = bucket_name, Prefix = prefix+date) for file_obj in data_dict[&#39;Contents&#39;]: f_name = file_obj[&#39;Key&#39;] tmp_path = &#39;/&#39;.join((path+f_name).split(&#39;/&#39;)[:-1]) if not os.path.exists(tmp_path): os.makedirs(tmp_path) s3.download_file(bucket_name, f_name, path+f_name) . Downloading: 2020-05-04 . Validate . for date in pd.date_range(start=start_date, end=end_date): date = str(date).split(&#39; &#39;)[0] # keeping just YYYY-MM-DD from YYYY-MM-DD HH:MM:SS data_dict = s3.list_objects(Bucket = bucket_name, Prefix = prefix+date) for file_obj in data_dict[&#39;Contents&#39;]: assert os.path.exists(path+file_obj[&#39;Key&#39;]), file_obj[&#39;Key&#39;] print(&#39;Validated&#39;) .",
            "url": "https://patel-zeel.github.io/blog/data/openaq/2020/12/23/Programatically_download_OpenAQ_data.html",
            "relUrl": "/data/openaq/2020/12/23/Programatically_download_OpenAQ_data.html",
            "date": " • Dec 23, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://patel-zeel.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://patel-zeel.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}